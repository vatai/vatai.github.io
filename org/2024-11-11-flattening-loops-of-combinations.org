#+property: header-args :results output :exports both
#+latex_header: \usepackage{tikz}
* N=5: i, j loop
#+begin_src python
  N = 5
  count = 0
  for i in range(N):
      for j in range(i+1, N):
          count += 1
          print(count, ":", i,j)
#+end_src

#+RESULTS:
#+begin_example
1 : 0 1
2 : 0 2
3 : 0 3
4 : 0 4
5 : 1 2
6 : 1 3
7 : 1 4
8 : 2 3
9 : 2 4
10 : 3 4
#+end_example

* N=5: lambda loop
#+begin_src python
  import math

  N = 5
  Nc2 = 10
  for L in range(Nc2):
      j = math.floor(math.sqrt(0.25 + 2*L) + 0.5)
      i = L - j*(j-1)//2
      print(L, ":", i, j)
#+end_src

#+RESULTS:
#+begin_example
0 : 0 1
1 : 0 2
2 : 1 2
3 : 0 3
4 : 1 3
5 : 2 3
6 : 0 4
7 : 1 4
8 : 2 4
9 : 3 4
#+end_example

* N=5: modified lambda loop
#+begin_src python :results output
  import math

  N = 5
  Nc2 = 10
  for L in reversed(range(Nc2)):
      j = math.floor(math.sqrt(0.25 + 2*L) + 0.5)
      i = L - j*(j-1)//2
      print(L, ":", N - 1 - j, N - 1 - i)
#+end_src

#+RESULTS:
#+begin_example
9 : 0 1
8 : 0 2
7 : 0 3
6 : 0 4
5 : 1 2
4 : 1 3
3 : 1 4
2 : 2 3
1 : 2 4
0 : 3 4
#+end_example

* N=5: modified i, j loop
#+begin_src python
  N = 5
  count = 0
  for j in range(N):
      for i in range(0, j):
          count += 1
          print(count, ":", i, j)
#+end_src

#+RESULTS:
#+begin_example
1 : 0 1
2 : 0 2
3 : 1 2
4 : 0 3
5 : 1 3
6 : 2 3
7 : 0 4
8 : 1 4
9 : 2 4
10 : 3 4
#+end_example

* Drawing

\begin{tikzpicture}

% GRAY
\foreach \i in {0,1,2,3,4}
  \foreach \j in {0,1,2,3}
    \node at (\i, \j) [draw, lightgray, circle]{};

% RED
\foreach \j [evaluate=\j as \jj using int(\j-1)] in {1,2,3}
  \foreach \i in {\jj,...,0}
    \node at (\j, \i) [fill, blue, circle]{};
\foreach \i in {0,1} \node at (4,\i) [fill, red, circle]{};

% labels
\node at (-1,-1) [anchor=east]{$\lambda=\frac{j(j-1)}{2}+i=6+1$};
\node at (-1,1) [draw]{$i=1$};
\node at (4,-1) [draw]{$j=4$};
\foreach \i in {0,2,3} \node at (-1,\i) {$\i$};
\foreach \j in {0,1,...,3} \node at (\j,-1) {$\j$};

\end{tikzpicture}
